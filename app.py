
# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n2-RJrW7yDgA-K22demK3dMPjSvyl73N
"""

'''from flask import Flask, jsonify, request
import pandas as pd

app = Flask(__name__)

def determine_cross_type(parent1, parent2):
    if len(parent1) == 2 and len(parent2) == 2:
        return "monohybrid"
    elif len(parent1) == 4 and len(parent2) == 4:
        return "dihybrid"
    else:
        return "invalid"

@app.route('/simulate', methods=['GET'])
def simulate():
    parent1 = request.args.get('parent1')
    parent2 = request.args.get('parent2')

    if not parent1 or not parent2:
        return jsonify({"error": "Please provide both parent alleles."}), 400

    #cross type: mono, di
    cross_type = determine_cross_type(parent1, parent2)

    if cross_type == "invalid":
        return jsonify({"error": "Invalid alleles provided. Please ensure correct input."}), 400

    #load dataset acc to cross type
    if cross_type == "monohybrid":
        monohybrid_df = pd.read_csv('monohybrid.csv')
        result = monohybrid_df
    elif cross_type == "dihybrid":
        dihybrid_df = pd.read_csv('dihybrid.csv')
        result = dihybrid_df

    #simulation of Punnett sq. result
    punnet_square = result.to_string(index=False)

    return jsonify({'punnetSquare': punnet_square})



if __name__ == '__main__':
    app.run(debug=True)'''


'''from flask import Flask, render_template, request

app = Flask(__name__)

# Route to render the home page
@app.route('/')
def index():
    return render_template('index.html')

# Route to handle form submission
@app.route('/process', methods=['POST'])
def process():
    parent1 = request.form.get('parent1')
    parent2 = request.form.get('parent2')

    # Simulate a Punnett Square result for simplicity
    punnett_square = [
        [parent1, parent1],
        [parent2, parent2]
    ]
    percentages = "50% each for Parent1 and Parent2 traits."

    return render_template('result.html', punnett_square=punnett_square, percentages=percentages)

if __name__ == '__main__':
    app.run(debug=True)'''

from flask import Flask, render_template, request

app = Flask(__name__)

# Route to render the home page
@app.route('/')
def index():
    return render_template('index.html')

# Route to handle form submission
@app.route('/process', methods=['POST'])
def process():
    parent1 = request.form.get('parent1')  # Example: "Aa"
    parent2 = request.form.get('parent2')  # Example: "Aa"

    # Validate input length
    if len(parent1) != len(parent2) or len(parent1) not in [2, 4]:
        return "Invalid input. Enter monohybrid (2 characters) or dihybrid (4 characters) crosses."

    # Generate Punnett Square
    punnett_square = []
    for p1 in parent1:
        row = []
        for p2 in parent2:
            row.append("".join(sorted(p1 + p2)))  # Combine alleles and sort for consistency
        punnett_square.append(row)

    # Count occurrences of each genotype
    counts = {}
    for row in punnett_square:
        for genotype in row:
            counts[genotype] = counts.get(genotype, 0) + 1

    # Calculate percentages
    total = sum(counts.values())
    percentages = {k: (v / total) * 100 for k, v in counts.items()}

    return render_template(
        'result.html', punnett_square=punnett_square, percentages=percentages
    )

if __name__ == '__main__':
    app.run(debug=True)

